public class Solution {
    public ArrayList<Integer> flip(String A) {
        ArrayList<Integer> result = new ArrayList<Integer>();
        int sum =0,count=0;
        int finalSum= Integer.MIN_VALUE;
        int sIndex=0,sFinal=0,eFinal=0;
        
        //We have to flip 0 & 1 to maximise the 1, so just check maximum size subarray with zero
        for(int i=0; i<A.length(); i++){
            if(A.charAt(i) == '0'){
                sum++;
                count++;
            }
            else{
                sum--;
            }
            
            //If sum <0 , reset the starting index and start counting again.
            if(sum<0){
                sum = 0;
                sIndex=i+1;
            }
            
            else{
                if(sum > finalSum){
                finalSum = sum;
                sFinal=sIndex;
                eFinal=i;
                }
            }
            //If we reach end of array, just return the index according to statement i.e. counting start from 1
            if(i == A.length()-1){
                if(count ==0){
                     return result;
                }
                result.add(sFinal +1);
                result.add(eFinal +1);
            }
        }
     return result;
    }
}
