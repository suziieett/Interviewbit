public class Solution {
    public int maxArr(ArrayList<Integer> A) {
        if(A.size()==0){
            return 0;
        }
        
        //By using the properties of Absolute Value, we come up with four cases i.e. 1. f(i, j) = (A[i] + i) - (A[j] + j); 2. f(i, j) = -(A[i] + i) + (A[j] + j);
        //3. f(i, j) = (A[i] - i) - (A[j] - j); 4. f(i, j) = -(A[i] - i) + (A[j] - j) which can be reduced to only two i.e. 1&2 are similar so combined and 3&4 two
        //Thus,max((A[i] + i) – (A[j] + j)) = max1 – min1 and max((A[i] – i) – (A[j] – j)) = max2 – min2
        
        int max1=Integer.MIN_VALUE;
        int min1=Integer.MAX_VALUE;
        int max2=Integer.MIN_VALUE;
        int min2=Integer.MAX_VALUE;
        
        for(int i=0; i<A.size(); i++){
            max1 = Math.max( max1, (A.get(i) +i));
            min1 = Math.min( min1, (A.get(i) +i));
            
            max2 = Math.max( max2, (A.get(i) -i));
            min2 = Math.min( min2, (A.get(i) -i));
        }
   
       
        return Math.max( Math.abs(max1- min1),Math.abs(max2- min2) );
                
        
    }
}
