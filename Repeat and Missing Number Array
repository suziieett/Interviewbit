public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public ArrayList<Integer> repeatedNumber(final List<Integer> A) {
        ArrayList<Integer> B= new ArrayList<Integer>(A);
        ArrayList<Integer> C= new ArrayList<Integer>();
        
        if(A.size()==0){
            return null;
        }
        for(int i=0; i<B.size(); i++){
           
           //Making the number negative at index equal to (its value - 1)
           //And checking if value at that index is negative means number already visited.
            if(B.get( Math.abs(B.get(i)) -1 ) > 0){
                B.set(( Math.abs(B.get(i)) -1 ),(B.get( Math.abs(B.get(i)) -1 )*-1) );
            }
            
            //Getting the repeated number
            else{
                C.add(Math.abs(B.get(i)));
            }
        }
       
        //Then the only index left uncovered leads to missng number by (index + 1).
        for(int i=0; i<B.size(); i++){
            if(B.get(i)> 0){
                C.add(i+1);
            }
        }
     return C;  
    }
}
